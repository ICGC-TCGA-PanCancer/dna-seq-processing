# Workflow preprocesses WGS sequences in FASTQ or BAM, then
# runs original PCAWG BWA-MEM alignment, different QC metrics are
# also collected at convenient steps

workflow:
  name:  dna-seq-alignment
  version: "0.0.1"

  env_var:  # JT will not pass these as parameters for tasks, instead, JT may check existence of the env variable
    SCORE_TOKEN:
      type: string
      is_required: true
    SONG_TOKEN:
      type: string
      is_required: true
  input:
    song_collab_url:
      type: string
      default: "https://song.cancercollaboratory.org"
    song_aws_url:
      type: string
      default: "https://virginia.song.icgc.org"
    exp_tsv:
      type: string
      is_file: true
      is_required: true
    rg_tsv:
      type: string
      is_file: true
      is_required: true
    file_tsv:
      type: string
      is_file: true
      is_required: true
    seq_exp_json_name:
      type: string
      default: seq_exp.json
    seq_rg_json_name:
      type: string
      default: seq_rg.json
    seq_files_dir:
      type: string
      is_required: true
    cpus:
      type: integer
      default: 1
    cram:
      type: boolean
      default: true
    markdup:
      type: boolean
      default: true
    picard_jar:
      type: string
      is_file: true
      default: "[picard.jar]https://github.com/broadinstitute/picard/releases/download/2.18.16/picard.jar"
    metadata_validation.dockstore_tool:
      type: string
      default: "[metadata-validation.cwl]https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/dna-seq-processing/master/tools/metadata_validation/metadata-validation.cwl"
    sequence_validation.dockstore_tool:
      type: string
      default: "[seq-validation.cwl]https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/dna-seq-processing/master/tools/sequence_validation/seq-validation.cwl"
    preprocess.dockstore_tool:
      type: string
      default: "[preprocess.cwl]https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/dna-seq-processing/master/tools/seq_data_to_lane_bam/preprocess.cwl"
    alignment_wf.dockstore_tool:
      type: string
      default: "[alignment_wf.cwl]"
    markdup.dockstore_tool:
      type: string
      default: "[markdup.cwl]https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/dna-seq-processing/master/tools/alignment_merge_sort_markdup/bam-merge-sort-markdup.cwl"
    reference_gz_amb:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.amb]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.amb"
    reference_gz_sa:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.sa]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.sa"
    reference_gz_pac:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.pac]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.pac"
    reference_gz_ann:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.ann]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.ann"
    reference_gz_bwt:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.bwt]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.bwt"
    reference_gz_alt:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.alt]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.alt"
    reference_gz_fai:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz.fai]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.fai"
    reference_gz:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.gz]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz"
    reference_fai:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa.fai]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.fai"
    reference:
      type: string
      is_file: true
      default: "[GRCh38_hla_decoy_ebv.fa]https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa"


  tasks:
    metadata_validation:
      tool: plugin:metadata_validation
      input:
        exp_tsv: exp_tsv
        rg_tsv: rg_tsv
        file_tsv: file_tsv
        seq_exp_json_name: seq_exp_json_name
        seq_rg_json_name: seq_rg_json_name
        dockstore_tool: metadata_validation.dockstore_tool

    sequence_validation:
      tool: sequence_validation
      input:
        seq_format: input_format@metadata_validation
        seq_rg_json: seq_rg_json@metadata_validation
        seq_files_dir: seq_files_dir
        dockstore_tool: sequence_validation.dockstore_tool

    preprocess:
      tool: preprocess
      input:
        seq_files_dir: seq_files_dir
        seq_rg_json: seq_rg_json@metadata_validation
        seq_format: input_format@metadata_validation
        picard_jar: picard_jar
        dockstore_tool: preprocess.dockstore_tool

    alignment_wf:
      tool: alignment_wf
      input:
        input_bam: lane_bams@preprocess
        ref_genome_gz: ref_genome_gz
        cpus: cpus
        aligned_lane_prefix: aligned_lane_prefix
        dockstore_tool: alignment_wf.dockstore_tool

    markdup:
      tool: markdup
      input:
        aligned_lane_bams: aligned_lane_bam@alignment
        aligned_basename: aligned_basename@preprocess
        ref_genome: ref_genome
        cpus: cpus
        markdup: markdup
        cram: cram
        dockstore_tool: markdup.dockstore_tool



# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  metadata_validation:
    command: cwltool_launcher.py

    input:
      exp_tsv:
        type: string
        is_file: true
      rg_tsv:
        type: string
        is_file: true
      file_tsv:
        type: string
        is_file: true
      seq_exp_json_name:
        type: string
      seq_rg_json_name:
        type: string
      dockstore_tool:
        type: string
        is_file: true

    output:
      input_format:
        type: string
      seq_exp_json:
        type: string
        is_file: true
      seq_rg_json:
        type: string
        is_file: true

  sequence_validation:
    command: cwltool_launcher.py

    input:
      seq_format:
        type: string
      seq_rg_json:
        type: string
        is_file: true
      seq_files_dir:
        type: string
        is_directory: true
      dockstore_tool:
        type: string
        is_file: true

    output:
      seq_status:
        type: string

  preprocess:
    command: cwltool_launcher.py

    input:
      seq_format:
        type: string
      seq_rg_json:
        type: string
        is_file: true
      seq_files_dir:
        type: string
      picard_jar:
        type: string
        is_file: true
      dockstore_tool:
        type: string
        is_file: true

    output:
      lane_bams:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      aligned_basename:
        type: string

  alignment_wf:
    command: cwltool_launcher.py

    input:
      input_bam:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      ref_genome_gz:
        type: string
        is_file: true
      cpus:
        type: integer
      aligned_lane_prefix:
        type: string
      dockstore_tool:
        type: string
        is_file: true
    output:
      aligned_lane_bam:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"

  markdup:
    command: cwltool_launcher.py

    input:
      aligned_lane_bams:
        type: array
        items:
          type: string
          is_file: true
          glob_pattern: "*.bam"
      aligned_basename:
        type: string
      ref_genome:
        type: string
        is_file: true
      cpus:
        type: integer
      markdup:
        type: boolean
      cram:
        type: boolean
      dockstore_tool:
        type: string
        is_file: true

    output:
      aligned_bam:
        type: string
        is_file: true
      aligned_bam_duplicate_metrics:
        type: string
        is_file: true
      aligned_cram:
        type: string
        is_file: true
